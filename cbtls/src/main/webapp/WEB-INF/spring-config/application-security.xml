<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<security:global-method-security secured-annotations="enabled"/>
	
	<security:http pattern="/images/**" security='none' /> 
 	<security:http pattern="/css/**" security='none' />
 	<security:http pattern="/js/**" security='none' />
 	
	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="myAuthenticationEntryPoint">
		<security:intercept-url pattern="/index.jsp" access="permitAll" />
		<security:intercept-url pattern="/accessDenied.jsp"	access="permitAll" />
		<security:intercept-url pattern="/userLogin.htm" access="permitAll" />
		<security:intercept-url pattern="/registerUser.htm" access="permitAll" />

		<security:intercept-url pattern="/*" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />

		<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<security:custom-filter position="FORM_LOGIN_FILTER" ref="myAuthFilter" />

		<security:logout invalidate-session="true" />

		<security:session-management
			session-authentication-strategy-ref="sas">
		</security:session-management>

		<security:access-denied-handler	error-page="/accessDenied.jsp" />

	</security:http>

	<!-- Use a SHA encoder since the user's passwords are stored as SHA in the 
		database -->
	<beans:bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />


	<!-- A custom service where Spring will retrieve users and their corresponding 
		access levels -->
	<beans:bean id="customUserDetailsService"
		class="com.nadee.cbtls.service.CustomUserDetailsServiceImpl" />

	<!-- A custom Login Success Handler -->
	<beans:bean id="loginSuccessHandler" class="com.nadee.cbtls.util.LoginSuccessHandler" />

	<!-- A custom Login Failure Handler -->
	<beans:bean id="loginFailureHandler" class="com.nadee.cbtls.util.LoginFailureHandler" />

	
	<beans:bean id="concurrencyFilter"
			class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg ref="sessionRegistry"/>
		<beans:constructor-arg value="/userLogin.htm" />
	</beans:bean>

	<beans:bean id="myAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg value="/userLogin.htm"/>
	</beans:bean>

	<beans:bean id="myAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationSuccessHandler"
			ref="loginSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler"
			ref="loginFailureHandler"></beans:property>
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>


	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
			<beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
				<beans:constructor-arg ref="sessionRegistry"/>
				<beans:property name="maximumSessions" value="1" />
				<beans:property name="exceptionIfMaximumExceeded" value="true" />
			</beans:bean>
			<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
			</beans:bean>
			<beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
				<beans:constructor-arg ref="sessionRegistry"/>
			</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="sessionRegistry"
	class="org.springframework.security.core.session.SessionRegistryImpl" />

</beans:beans>